#!/bin/env bash
black="\e[30m"
red="\033[31m"
green="\033[32m"
yellow="\033[33m"
blue="\033[34m"
purple="\033[35m"
cyan="\033[36m"
white="\033[37m"
background="\033[0m"
token="\u0037\u0037\u0038\u0037\u0030\u0036\u0034\u0034\u0066\u0061\u0032\u0033\u0063\u0031"
GithubMirror="https://mirrors.chenby.cn/"
AFHOME=$AFYZHOME

if [ -x /usr/local/NodeJS/bin/node ]
then
  if [ ! -d $HOME/.local/share/pnpm ];then
        mkdir -p $HOME/.local/share/pnpm
  fi
  export PATH=$PATH:/usr/local/NodeJS/bin
  export PATH=$PATH:/root/.local/share/pnpm
  export PNPM_HOME=/root/.local/share/pnpm
  export PUPPETEER_SKIP_DOWNLOAD=true
fi

function MenuTips(){
  echo "当前时期 $(date +"%Y-%m-%d %H:%M")"
}

function gitclone(){
if [ -d "$2" ]
then
  echo -e ${red}目标路径已经存在${background}
  return 1
fi
if echo "$1" | grep -q gitee
then
  git clone --depth=1 "$1" "$2"
  return 0
fi
if CheckNetwork
then
  MirrorNum=("gh-proxy" "ghproxy" "gh" "kkgithub" "github" "error")
else
  MirrorNum=("github")
fi
for i in ${MirrorNum[@]}
do
  case ${i} in
  github)
    if git clone --depth=1 "$1" "$2"
    then
      return 0
    else
      rm -rf "$2"
    fi
    ;;
  gh-proxy)
    GitUrl=$(echo "$1" | sed 's|https://github.com|https://gh-proxy.com/https://github.com|g')
    if git clone --depth=1 "${GitUrl}" "$2"
    then
      return 0
    else
      rm -rf "$2"
    fi
    ;;
  gitclone)
    GitUrl=$(echo "$1" | sed 's|https://github.com|https://gitclone.com/github.com|g')
    if git clone --depth=1 "${GitUrl}" "$2"
    then
      return 0
    else
      rm -rf "$2"
    fi
    ;;
  kkgithub)
    GitUrl=$(echo "$1" | sed 's|https://github.com|https://kkgithub.com|g')
    if git clone --depth=1 "${GitUrl}" "$2"
    then
      return 0
    else
      rm -rf "$2"
    fi
    ;;
  gh)
    GitUrl=$(echo "$1" | sed 's|https://github.com|https://gh.arcticfox.top/https://github.com|g')
    if git clone --depth=1 "${GitUrl}" "$2"
    then
      return 0
    else
      rm -rf "$2"
    fi
    ;;
  ghproxy)
    GitUrl=$(echo "$1" | sed 's|https://github.com|https://mirror.ghproxy.com/https://github.com|g')
    if git clone --depth=1 "${GitUrl}" "$2"
    then
      return 0
    else
      rm -rf "$2"
    fi
    ;;
  error)
    echo -e ${yellow}仓库克隆 ${red}失败${background}
    exit 1
    ;;
  esac
done
}

function IncrementCounter(){
  if [ -z ${count} ]
  then
    count=0
  fi
  ((count++))
  case ${count} in
    3)
      count=0
      return 1
  esac
  return 0
}

function Download(){
file="$1"
URL="$2"
local i=0
DownloadStart(){
  echo -e ${blue}[${green}*${blue}] ${cyan}正在下载 ${yellow}${file}${cyan}${background}
  until ${Command}
  do
    if ! IncrementCounter
    then
      echo -e ${blue}[${red}*${blue}] ${cyan}错误次数过多 ${yellow}退出${background}
      return 1
    fi
    echo -e ${blue}[${red}*${blue}] ${cyan}下载失败 ${yellow}三秒后重试${background}
    sleep 3s
  done
  echo -e ${blue}[${green}*${blue}] ${cyan}下载完成.${background}
  return 0
}
if $(command -v wget > /dev/null 2>&1) && $(wget --help all | grep -q show-progress)
then
  Command="wget --quiet --show-progress --output-document="${file}" --continue "${URL}""
  DownloadStart
elif $(command -v curl > /dev/null 2>&1) && $(curl --help all | grep -q progress-bar)
then
  Command="curl --output "${file}" --progress-bar --location --continue-at - "${URL}""
  DownloadStart
elif $(command -v wget > /dev/null 2>&1)
then
  Command="wget --output-document="${file}" --continue "${URL}""
  DownloadStart
else
  echo -e ${blue}[${red}*${blue}] ${cyan}无下载器.${background}
  return 1
fi
}

function MenuSize(){
local HEIGHT=$(($(tput lines) - 5))
local WIDTH=$(($(tput cols) - 5))
local OPTION=$((${HEIGHT} - 7))
if (( $HEIGHT <= 3 ));then
  echo -e ${blue}[${red}*${blue}] ${cyan}您的屏幕高度过低.${background}
  echo -e ${blue}[${red}*${blue}] ${cyan}考虑缩小终端字体.${background}
  exit
fi
if (( $WIDTH <= 0 ));then
  echo -e ${blue}[${red}*${blue}] ${cyan}您的屏幕宽度过窄.${background}
  echo -e ${blue}[${red}*${blue}] ${cyan}考虑缩小终端字体.${background}
  exit
fi
echo ${HEIGHT} ${WIDTH} ${OPTION}
}

function MsgboxSize(){
local HEIGHT=$(($(tput lines) - 15))
local WIDTH=$(($(tput cols) - 5))
if (( $HEIGHT <= 0 ));then
  echo -e ${blue}[${red}*${blue}] ${cyan}您的屏幕高度过低.${background}
  echo -e ${blue}[${red}*${blue}] ${cyan}考虑缩小终端字体.${background}
  exit
fi
if (( $WIDTH <= 0 ));then
  echo -e ${blue}[${red}*${blue}] ${cyan}您的屏幕宽度过窄.${background}
  echo -e ${blue}[${red}*${blue}] ${cyan}考虑缩小终端字体.${background}
  exit
fi
echo ${HEIGHT} ${WIDTH}
}

Arch(){
case `uname -m` in
aarch64|arm64)
	echo arm64
	;;
x86_64|x64|amd64)
	echo x64
	;;
*)
  echo -e ${blue}[${red}*${blue}] ${cyan}不支持的架构.${background}
  until read
	do
	  echo -e ${blue}[${red}*${blue}] ${cyan}不支持的架构.${background}
	done
esac
}

function ErrorReturn(){
echo -en "
${white}————————————————————
    脚本运行出现${red}错误$white,请及时${blue}截图${white},保存报错信息,
    以与便开发者,${green}更好的${white}和${green}更快的${cyan}解决${white}问题.
${white}————————————————————${background}"
exit 1
}

function SelectRegion(){
Tips(){
echo && echo -en "
 ———————————————————
 ${cyan}请问您的设备所在位置是? 
    ${green}1${white}. 中国大陆 ${background}
    ${green}2${white}. 其他位置 ${background}
 ———————————————————
 ${cyan}请输入数字 ${white}[1-2]:${background} "
}
read -p "$(Tips)" num
case ${num} in
1)
return 0
;;
2)
return 1
;;
*)
echo -e ${blue}[${red}*${blue}] ${cyan}输入错误 ${yellow}保持默认 ${purple}中国大陆.${background}
return 0
esac
}

function CheckNetwork(){
IpinfoIo=$(curl -sL ipinfo.io/json)
if [ -z "${IpinfoIo}" ]
then
  if SelectRegion
  then
    return 0
  else
    return 1
  fi
else
  if echo ${IpinfoIo} | grep -q error
  then
    token=$(echo -e ${token})
    if curl -sL ipinfo.io/json?token=${token} | jq .country | grep -q "CN"
    then
      return 0
    else
      return 1
    fi
  else
    if echo ${IpinfoIo} | jq .country | grep -q "CN"
    then
      return 0
    else
      return 1
    fi
  fi
fi
}

function Update(){
if [ -z ${Update} ]
then
  Command=$@
  ${Command}
  Update=true
fi
}

function TUISoftware(){
if [ -x "$(command -v whiptail)" ];then
  echo whiptail
elif [ -x "$(command -v dialog)" ];then
  echo dialog
else
  echo -e ${red}没有TUI软件${background}
  exit 1
fi
}

function Session(){
  jq .SelectManageSession $AFHOME/config.json | sed 's|"||g'
}

function Stop(){
CheckStatus "$1" "$2" "$3"
case $? in
1)
  ManageSessionPKG=tmux
  ;;
2)
  ManageSessionPKG=screen
  ;;
3)
  ManageSessionPKG=pm2
  ;;
4)
  ManageSessionPKG=kill
  ;;
esac
case ${ManageSessionPKG} in
tmux|screen|pm2)
  if ManageSession ${ManageSessionPKG} stop "$1"
  then
    return 0
  else
    return 1
  fi
  ;;
kill)
  PID=$(ps all | sed '/grep/d' | sed '/dialog/d' | sed '/whiptail/d' | grep "$2" | awk '{print $1}')
  kill -9 ${PID}
  ;;
esac
}

function Restart(){
CheckStatus "$1" "$2" "$3"
case $? in
1)
  ManageSessionPKG=tmux
  ;;
2)
  ManageSessionPKG=screen
  ;;
3)
  ManageSessionPKG=pm2
  ;;
4)
  ManageSessionPKG=kill
  ;;
esac
case ${ManageSessionPKG} in
tmux|screen|pm2)
  if ManageSession ${ManageSessionPKG} restart "$3"
  then
    return 0
  else
    return 1
  fi
  ;;
kill)
  PID=$(ps all | sed '/grep/d' | sed '/dialog/d' | sed '/whiptail/d' | grep "$2" | awk '{print $1}')
  kill -9 ${PID}
  START "$1" "$3"
  ;;
esac
}

function Log(){
CheckStatus "$1" "$2" "$3"
case $? in
1)
  ManageSessionPKG=tmux
  ;;
2)
  ManageSessionPKG=screen
  ;;
3)
  ManageSessionPKG=pm2
  ;;
4)
  ManageSessionPKG=kill
  ;;
esac
case ${ManageSessionPKG} in
tmux|screen|pm2)
  if ManageSession ${ManageSessionPKG} log "$3"
  then
    return 0
  else
    return 1
  fi
  ;;
kill)
  echo "$1 [前台] 启动"
  return 1
  ;;
esac
}

function PsAll(){
  ps all | sed '/grep/d' | sed '/dialog/d' | sed '/whiptail/d' | grep -q "$1"
}

function CheckStatus(){
if tmux ls 2>&1 | grep -q "$1"
then
  return 1
elif screen -ls 2>&1 | grep -q "$1"
then
  return 2
elif pm2 list 2>&1 | sed '/stopped/d' | grep -q "$3"
then
  return 3
elif PsAll "$2"
then
  return 4
else
  return 0
fi
}

function StartType(){
CheckStatus "$1" "$2" "$3"
case $? in
1)
  $(TUISoftware) --title "AF-IdentifyType" \
  --msgbox "$3 已在 [Tmux] 中启动" \
  $(MsgboxSize)
  return 1
;;
2)
  $(TUISoftware) --title "AF-IdentifyType" \
  --msgbox "$3 已在 [Screen] 中启动" \
  $(MsgboxSize)
  return 2
;;
3)
  $(TUISoftware) --title "AF-IdentifyType" \
  --msgbox "$3 已在 [Pm2] 中启动" \
  $(MsgboxSize)
  return 3
;;
4)
  $(TUISoftware) --title "AF-IdentifyType" \
  --msgbox "$3 已在 [前台] 中启动" \
  $(MsgboxSize)
  return 4
;;
esac
}

function ManageSession(){
case "$1" in
tmux)
  case "$2" in
    start)
      tmux new -s "$3" -d "$4" > /dev/null
      return $?
    ;;
    stop)
      tmux kill-session -t "$3" > /dev/null
      return $?
    ;;
    restart)
      tmux kill-session -t "$3" && tmux new -s "$3" -d "$4" > /dev/null
      return $?
    ;;
    log)
      tmux attach -t "$3" > /dev/null
      return $?
    ;;
    list)
      tmux ls | grep -q "$3"
      return $?
    ;;
  esac
;;
screen)
  case "$2" in
    start)
      screen -S "$3" -d -m bash -c "$4"
      return $?
      ;;
    stop)
      Session=$(screen -ls | grep "$3" | awk '{print $1}')
      screen -X -S ${Session} quit
      return $?
      ;;
    restart)
      Session=$(screen -ls | grep "$3" | awk '{print $1}')
      screen -X -S ${Session} quit && screen -S ${Session} -d -m bash -c "$4"
      return $?
      ;;
    log)
      Session=$(screen -ls | grep "$3" | awk '{print $1}')
      screen -r ${Session}
      return $?
      ;;
    list)
      screen -ls | grep -q "$3"
      return $?
      ;;
  esac
;;
pm2)
  case $2 in
    start)
      pm2 start --name $3 "$4"
      return $?
    ;;
    stop)
      pm2 stop "$3"
      return $?
    ;;
    restart)
      pm2 stop "$3" && pm2 start --name $3 "$4"
      return $?
    ;;
    log)
      pm2 logs "$3" | sed '/PM2/d'
      return $?
    ;;
    list)
      pm2 list
      return $?
    ;;
  esac
;;
esac
}

function CheckRedisServer(){
function PedisCliPing(){
if [ "$(redis-cli ping 2>&1)" == "PONG" ]
then
  return 0
else
  return 1
fi
}
if $(PedisCliPing)
then
  echo -e ${cyan}Redis-Server${yellow} 已经启动${background}
else
  echo -e ${cyan}Redis-Server${yellow} 正在启动${background}
  $(nohup redis-server > /dev/null 2>&1 &)
  until PedisCliPing
  do
    sleep 0.2s
  done
  echo -e ${cyan}Redis-Server${yellow} 启动成功${background}
fi
}

function CheckSignApi(){
  local file="config/config/bot.yaml"
  SignApi=$(grep sign_api_addr ${file} | sed 's|sign_api_addr: ||g')
  if [ -n ${SignApi} ]
  then
    echo -e ${yellow}正在检查签名可用性${background}
    if curl -sL ${SignApi} | tee grep com.tencent.mobileqq
    then
      echo
      echo -e ${green}签名可用${background}
    else
      echo
      echo -e ${red}签名不可达${background}
    fi
  fi
}

function START(){
  CheckRedisServer
  local Command="$1"
  ${Command}
  Pm2List=$(pm2 list 2>&1)
  if echo ${Pm2List} | grep -q "$2"
  then
    if ! $(pm2 list 2>&1 | grep "$2" | grep -q stopped)
    then
      pm2 delete "$2" > /dev/null 2>&1
      START "$1" "$2"
    fi
  fi
}

function ProgressBar(){
  {
    i=0
    while CheckStatus "$1" "$2" "$3"
    do
      echo $((i++))
      if echo ${i} | grep -q 100
      then
        return 1
      fi
    done
    return 0
  } | $(TUISoftware) --gauge "${BotName} [正在启动]" $(MsgboxSize) 0
}

function CheckPath(){
  local Name=$@
  for i in ${Name[@]}
  do
    if [ -d "$HOME/${i}/node_modules" ]
    then
      export BotPath="$HOME/${i}"
      cd "$HOME/${i}"
      return 0
    elif [ -d "$HOME/.fox@bot/${i}/node_modules" ]
    then
      export BotPath="$HOME/.fox@bot/${i}"
      cd "$HOME/.fox@bot/${i}"
      return 0
    elif [ -d "$HOME/fox@bot/${i}/node_modules" ]
    then
      export BotPath="$HOME/fox@bot/${i}/node_modules"
      cd "$HOME/fox@bot/${i}"
      return 0
    elif grep -q true ../config.json
    then
      if $(command -v jq > /dev/null)
      then
        BotPath=$(jq -r ".BotPath" ../config.json)
        if [ -e ${BotPath}/package.json ]
        then
          cd "${BotPath}"
          export BotPath=${BotPath}
        fi
      fi
    fi
  done
  return 1
}

function CheckInstall(){
  case $1 in
  YN|Yunzai-Next)
    if CheckPath Yunzai-Next Yunzai-Bot yunzai-bot yunzaijs
    then
      return 0
    else
      return 1
    fi
    ;;
  MZ|Miao-Yunzai)
    if CheckPath Miao-Yunzai
    then
      return 0
    else
      return 1
    fi
    ;;
  TZ|TRSS-Yunzai)
    if CheckPath TRSS-Yunzai Yunzai
    then
      return 0
    else
      return 1
    fi
    ;;
  esac
}